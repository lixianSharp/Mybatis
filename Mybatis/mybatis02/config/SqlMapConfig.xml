<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 属性定义 加载一个properties文件  在properties标签中配置属性值-->
	<properties resource="db.properties">
		<!-- <property name="" value=""/> -->
	</properties>
	
	
	<!-- 全局配置参数   -->
	<settings>
		<!-- 延迟加载总开关  全局性设置懒加载。如果设为‘false’，则所有相关联的都会被初始化加载。-->
		<setting name="lazyLoadingEnabled" value="true"/>
		<!-- 设置按需加载  当设置为‘true’的时候，懒加载的对象可能被任何懒属性全部加载。否则，每个属性都按需加载-->
		<setting name="aggressiveLazyLoading" value="false"/>
		<!-- 开启二级缓存 -->
		<setting name="cacheEnabled" value="true"/>
	</settings>
	
	
	<!-- 定义 别名 -->
	<typeAliases>
		<!-- 单个别名的定义 alias:别名 -->
		<!-- <typeAlias type="cn.itcast.mybatis.po.User" alias="user"/> -->
		
		<!-- 批量别名定义
		指定包路径，自动扫描包下边的pojo，定义别名，别名默认为类名(首字母大写或小写)
		 -->
		 <package name="cn.itcast.mybatis.po"/>
		
	</typeAliases>
	
	<!-- 和spring整合后 environments配置将废除 -->
	<environments default="development">
		<environment id="development">
			<!-- 使用jdbc事务管理 -->
			<transactionManager type="JDBC" />
			<!-- 数据库连接池 -->
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>
	

	
	<!-- 加载mapper映射
			如果将和spring整合后，可以使用整合包中提供的mapper扫描器，此处的mapper不用配置了
	-->
	<mappers>
		<!-- 通过resource引用mapper的映射文件 -->
		<!-- <mapper resource="sqlmap/User.xml" /> -->
		<!-- <mapper resource="mapper/UserMapper.xml" /> -->
		<!-- 通过class引用mapper接口 class：配置mapper接口全限定名 要求：需要mapper.xml和mapper.java同名并且在一个目录 
			中 -->
		<!-- <mapper class="cn.itcast.mybatis.mapper.UserMapper"/> -->
		
		<!-- 批量mapper配置 
			通过package进行自动扫描包下边的mapper接口
			要求：需要mapper.xml和mapper.java同名并且在一个目录中
		-->
		<package name="cn.itcast.mybatis.mapper"/>
		
	</mappers>


</configuration>