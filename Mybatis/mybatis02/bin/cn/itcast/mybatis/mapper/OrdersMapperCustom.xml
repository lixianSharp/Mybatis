<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.itcast.mybatis.mapper.OrdersMapperCustom">
	
	<!-- 一对一查询使用resultType完成
		查询订单关联用户信息
	 -->
	<select id="findOrderUserList" resultType="orderCustom">
		select orders.*,user.username,user.sex 
		from orders,user 
		where orders.user_id=user.id
	
	</select>


	<!-- 一对一查询使用resultMap完成
		查询订单关联的用户信息
	 -->
	<select id="findOrderUserListResultMap" resultMap="orderUserResultMap">
		select orders.*,user.username,user.sex 
		from orders,user 
		where orders.user_id=user.id
	
	</select>
	
	<!--一对一查询resultMap  -->
	<resultMap type="orders" id="orderUserResultMap">
		<!-- 完成了订单信息的映射配置 -->
		<!-- id：订单关联用户查询的唯一标识 
			id:要映射结果集的唯一标识，称为主键
	 		column：结果集的列名
	 		property：type指定的哪个属性
		-->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		
		<!-- 下边完成关联信息的映射
			association：用于对关联信息映射到单个pojo
			property：要将关联信息映射到orders的那个属性中
			javaType:关联信息映射到orders的属性的类型，是user的类型
		 -->
		 <association property="user" javaType="user" >
		 	<!-- id:关联信息的唯一标识 -->
		 	<!-- property：要映射到user的哪个属性中 -->
		 	<id column="user_id" property="id"/>
		 	<!-- result就是普通列的映射 -->
		 	<result column="username" property="username"/>
		 	<result column="sex" property="sex"/>
		 </association>
	</resultMap>
	
	
	<!-- 一对多查询使用resultMap完成 
		查询订单关联查询订单明细
	-->
	<select id="findOrderAndorderDetail" resultMap="orderAndOrderDetails">
		SELECT
		  orders.*,
		  user.username,
		  user.sex ,
		  orderdetail.id orderdetail_id,
		  orderdetail.items_num,
		  orderdetail.items_id
		FROM
		  orders,
		  USER,
		  orderdetail
		WHERE orders.user_id = user.id  AND orders.id = orderdetail.orders_id
	
	</select>
	
	<!-- ///////////////////////////////////////////////////// -->
	<!-- 一对多，查询订单级订单明细   resultMap定义   延迟加载
		id:mapper.xml中的唯一标识
	 	type:最终要映射的pojo类型
	
	<resultMap id="orderAndOrderDetails" type="orders">
		映射订单信息和用户信息，这里使用继承orderUserResultMap
		完成了订单信息的映射配置
		id：订单关联用户查询的唯一标识 
			id:要映射结果集的唯一标识，称为主键
	 		column：结果集的列名
	 		property：type指定的哪个属性
		
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		
		下边完成关联信息的映射
			
			配置用户信息的延迟加载
			select:延迟加载执行的sql所在的statement的id,如果 不在同一个namespace，则需要加namespace。
			sql:根据用户id查询用户信息  
			column:关联查询的用户信息设置到Orders的哪个属性   user_id是orders表中的外键
		
		 <association property="user"
			 select="cn.itcast.mybatis.mapper.UserMapper.findUserById"
			 column="user_id"
			>
		 </association>
		映射订单明细信息
			select:延迟加载执行的sql所在的statement的id,如果 不在同一个namespace，则需要加namespace。
			sql:根据用户id查询用户信息  
			column:关联查询的用户信息设置到Orders的哪个属性   user_id是orders表中的外键
		
		 <collection property="orderdetail" 
			 select=":延迟加载执行的sql所在的statement的id,,如果 不在同一个namespace，则需要加namespace。"
			 column="id"
			>
		 </collection>
	
	</resultMap> -->
	
	
	<!-- 一对多，查询订单级订单明细   resultMap定义
		id:mapper.xml中的唯一标识
	 	type:最终要映射的pojo类型
	 -->
	<resultMap id="orderAndOrderDetails" type="orders"  extends="orderUserResultMap">
		<!-- 映射订单信息和用户信息，这里使用继承orderUserResultMap -->
		
		<!-- 映射订单明细信息
			property:将要关联信息映射到order的哪个属性中
			ofType:集合中pojo的类型
		 -->
		 <collection property="orderdetail" ofType="cn.itcast.mybatis.po.Orders">
		 	<!-- id：关联信息订单明细的唯一标识
		 		property:Orderdetail的属性名
		 		column:表示从数据库中查询出来的数据
		 		property：表示要将column映射到ofType类型中的哪个属性中
		 	 -->
		 	 <id column="orderdetail_id" property="id"/>
		 	 <result column="items_num" property="itemsNum"/>
		 	 <result column="items_id" property="itemsId"/>
		 </collection>
	
	</resultMap>
	
	
	
	
	
	
	
	<!-- 一对多查询使用resultMap完成 查询用户及订单和 订单明细 关联商品 的信息-->
	<select id="findUserOrderDetail" resultMap="userOrderDetailResultMap">
		SELECT
		  orders.*,
		  user.username,
		  user.sex ,
		  orderdetail.id orderdetail_id,
		  orderdetail.items_num,
		  orderdetail.items_id,
		  items.name items_name,
		  items.detail items_detail
		FROM
		  orders,
		  USER,
		  orderdetail,
		  items
		WHERE orders.user_id = user.id  AND orders.id = orderdetail.orders_id AND items.id = orderdetail.items_id
			
	</select>
	
	<!-- 一对多查询，查询用户及订单明细和商品信息
		id:mapper.xml中的唯一标识  type:最终要映射的pojo类型 -->
	<resultMap type="user" id="userOrderDetailResultMap">
		<!-- 用户映射信息 id:要映射结果集的唯一标识 -->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>	
		<result column="sex" property="sex"/>
		<!-- 订单信息 ofType:集合中pojo的类型 -->
		<collection property="orderlist" ofType="cn.itcast.mybatis.po.Orders">
			<!-- id:要映射结果集的唯一标识 -->
			<id column="id" property="id"/>
			<result column="user_id" property="userId"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			<!-- 订单明细映射 -->
			<collection property="orderdetail" ofType="cn.itcast.mybatis.po.Orderdetail">
				<!-- id:关联信息订单明细的唯一标识 property：OrderDetail的属性名-->
				<id column="orderdetail_id" property="id"/>
				<result column="item_num" property="itemsNum"/>
				<result column="item_id" property="itemsId"/>
				<!-- 商品信息 -->
				<association property="items" javaType="cn.itcast.mybatis.po.Items">
					<!-- id:关联信息订单明细的唯一标识 property：Items的属性名-->
					<id column="item_id" property="id"/>
					<result column="item_name" property="name"/>
					<result column="item_detail" property="detail"/>
				</association>
			</collection>
		</collection>
	</resultMap>
	
	
	<!-- 一对一查询延迟加载
		开始之查询订单，对用户信息进行延迟加载
	 -->
	<select id="findOrderUserListLazyLoading" resultMap="orderCustomLazyLoading">
		select orders.* 
		from orders;
	</select>
	
	<!-- 一对一查询 延迟加载的 resultMap的配置 -->
	<resultMap id="orderCustomLazyLoading" type="orders">
		<!-- 完成了订单信息的映射配置 -->
		<id column="id"  property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 配置用户信息的延迟加载
			select:延迟加载执行的sql所在的statement的id,如果 不在同一个namespace，则需要加namespace。
			sql:根据用户id查询用户信息  
			column:关联查询的用户信息设置到Orders的哪个属性   user_id是orders表中的外键
		-->
		<association property="user"
			select="cn.itcast.mybatis.mapper.UserMapper.findUserById"
			column="user_id"
		>
			
		</association>
	</resultMap>
	
	
	
	
	
</mapper>